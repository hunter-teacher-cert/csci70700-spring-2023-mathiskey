section	.text
	global _start       ;must be declared for using gcc
_start:   ;tell linker entry point

    ; move the data to registers
    mov eax, [num1] 
    mov ebx, [num2]
    
    
    ; add the data and store to register A
	add eax, ebx
	mov ebx, [num3] ; third num
	add eax, ebx
	add eax, '0' ; converts from num to ASCII value of number
	
	mov [result], eax
	
	mov	edx, len    ;message length
	mov	ecx, msg    ;message to write
	mov	ebx, 1	    ;file descriptor (stdout)
	mov	eax, 4	    ;system call number (sys_write)
	int	0x80        ;call kernel
	
	;print sum
	mov edx, 1 ; message length
	mov ecx, result ; message to write
	mov ebx, 1  ; file descriptor
	mov eax, 4  ; system call num
	int 0x80     ; call kernel
	
	; end connection to Linux system
	mov	eax, 1	    ;system call number (sys_exit)
	int	0x80        ;call kernel

section	.data

    msg	db	'Wow! The sum is ',0xa	;our dear string
    len	equ	$ - msg			;length of our dear string
    
    num1 db 3
    num2 db 4
    num3 db 2
    
   ; uninitialized data 
section .bss
    result resb 1
